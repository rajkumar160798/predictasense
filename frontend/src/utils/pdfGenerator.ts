// utils/pdfGenerator.ts
import { jsPDF } from "jspdf";
import html2canvas from "html2canvas";

export const generateFullDashboardPDF = async () => {
  const pdf = new jsPDF("p", "pt", "a4");
  const delay = (ms: number) => new Promise((res) => setTimeout(res, ms));
  await delay(100);

  // ======= Cover Page =======
  pdf.setFont("helvetica", "bold");
  pdf.setFontSize(30);
  pdf.setTextColor(40);
  pdf.text("ProvansIQ Maintenance Report", pdf.internal.pageSize.getWidth() / 2, 290, { align: "center" });

  pdf.setFontSize(14);
  pdf.setTextColor(60);
  pdf.text("Generated by ProvansIQ AI Platform", pdf.internal.pageSize.getWidth() / 2, 340, { align: "center" });

  pdf.setFontSize(12);
  pdf.setTextColor(50);
  pdf.text("This report contains forecast analysis, anomaly trends, root cause confidence scores,", pdf.internal.pageSize.getWidth() / 2, 400, { align: "center" });
  pdf.text("suggested actions, and smart alerts generated across various industrial metrics.", pdf.internal.pageSize.getWidth() / 2, 420, { align: "center" });

  pdf.setTextColor(80);
  pdf.text("Generated on: " + new Date().toLocaleString(), pdf.internal.pageSize.getWidth() / 2, 740, { align: "center" });

  pdf.setFontSize(16);
  pdf.setTextColor(100);
  pdf.text("— Full Dashboard Report —", pdf.internal.pageSize.getWidth() / 2, 700, { align: "center" });

  // ======= Sections =======
  const chartIds = [
    "chart-temperature",
    "chart-vibration",
    "chart-pressure",
    "chart-comparative",
    "chart-heatmap",
    "rootcause-confidence",
    "alert-priority-table",
    "system-health-score"
  ];

  for (let i = 0; i < chartIds.length; i++) {
    const chart = document.getElementById(chartIds[i]);
    if (!chart) {
      console.warn(`Chart not found: ${chartIds[i]}`);
      continue;
    }

    try {
      await delay(100);
      const canvas = await html2canvas(chart);
      const imgData = canvas.toDataURL("image/png");

      pdf.addPage();
      const title = chart.getAttribute("data-report-title") || chartIds[i].replace("chart-", "").toUpperCase();

      pdf.setFontSize(18);
      pdf.setTextColor(40);
      pdf.text(title, 40, 40);

      pdf.addImage(imgData, "PNG", 40, 60, 520, 390);

      pdf.setFontSize(12);
      pdf.setTextColor(80);
      pdf.text(getInsight(chartIds[i]), 40, 470, { maxWidth: 520 });
    } catch (error) {
      console.error(`Failed to capture chart: ${chartIds[i]}`, error);
    }
  }

  // ======= Diagnosis Section =======
  pdf.addPage();
  pdf.setFontSize(20);
  pdf.setTextColor(40);
  pdf.text("📌 Diagnosis Summary", 40, 50);

  pdf.setFontSize(12);
  pdf.setTextColor(80);
  pdf.text("This section highlights the key insights based on observed anomalies and system health.", 40, 70);

  const sensorData = localStorage.getItem("sensorData");
  if (sensorData) {
    const rows = JSON.parse(sensorData);
    const latest = rows[rows.length - 1];

    if (latest.temperature > 80) {
      pdf.text("⚠️ High Temperature detected.", 40, 110);
      pdf.text("Potential Causes: Overheating, ventilation failure, motor friction.", 60, 125);
    }
    if (latest.pressure > 1015) {
      pdf.text("⚠️ Pressure anomaly detected.", 40, 150);
      pdf.text("Potential Causes: Pipe blockage, valve issues, overloading.", 60, 165);
    }
    if (latest.vibration > 0.07) {
      pdf.text("⚠️ High Vibration levels detected.", 40, 190);
      pdf.text("Potential Causes: Bearing wear, misalignment, rotor imbalance.", 60, 205);
    }
  } else {
    pdf.text("No real-time data available for diagnosis.", 40, 110);
  }

  pdf.save("provansiq_dashboard_report.pdf");
};

const getInsight = (id: string) => {
  switch (id) {
    case "chart-temperature":
      return "Temperature trends help detect overheating or cooling issues. Sudden spikes or drops can signal maintenance needs.";
    case "chart-vibration":
      return "Abnormal vibration patterns may indicate mechanical imbalance, wear and tear, or misalignment.";
    case "chart-pressure":
      return "Pressure anomalies may result from blockages or leaks. Monitor deviations closely.";
    case "chart-comparative":
      return "Comparative analysis gives cross-metric insights. Correlation between temperature, vibration, and pressure can highlight root causes.";
    case "chart-heatmap":
      return "Heatmap highlights anomalies. Red intensity shows frequency and severity. Frequent anomalies at certain hours should trigger inspection.";
    case "rootcause-confidence":
      return "Confidence scores reflect the likelihood of each metric being the primary root cause for observed anomalies.";
    case "alert-priority-table":
      return "Smart alert prioritization ranks metrics based on severity, frequency, and predicted impact. This helps target urgent issues first.";
    case "system-health-score":
      return "System health card summarizes total anomalies and risk score, guiding immediate attention areas in your operations.";
    default:
      return "";
  }
};

export default generateFullDashboardPDF;
