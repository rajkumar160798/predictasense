// src/utils/pdfGenerator.ts
import { jsPDF } from "jspdf";
import html2canvas from "html2canvas";

export const generateForecastPDF = async () => {
  const pdf = new jsPDF("p", "pt", "a4");


  const delay = (ms: number) => new Promise((res) => setTimeout(res, ms));
    await delay(1000); // Delay to ensure charts are rendered
    pdf.setFontSize(12);
    pdf.text("Generated on: " + new Date().toLocaleString(), 40, 60);
    pdf.setFontSize(12);
    pdf.text("Generated by: Your Company Name", 40, 80);
    pdf.setFontSize(12);
    const timestamp = `Exported on ${new Date().toLocaleString()}`;
    pdf.text(timestamp, 40, 780);
  const chartIds = [
    "chart-temperature",
    "chart-vibration",
    "chart-pressure",
    "chart-comparative",
    "chart-heatmap",
  ];

  for (let i = 0; i < chartIds.length; i++) {
    const chart = document.getElementById(chartIds[i]);
    if (chart) {
      try {
        await delay(300); // Delay to ensure chart is fully rendered
        const canvas = await html2canvas(chart);
        const imgData = canvas.toDataURL("image/png");

        if (i !== 0) pdf.addPage();
        pdf.setFontSize(18);
        pdf.text(chartIds[i].replace("chart-", "").toUpperCase(), 40, 40);
        pdf.addImage(imgData, "PNG", 40, 60, 520, 390);

        // Insight
        pdf.setFontSize(12);
        pdf.setTextColor(80);
        pdf.text(getInsight(chartIds[i]), 40, 500, { maxWidth: 520 });
      } catch (error) {
        console.error(`Failed to capture chart: ${chartIds[i]}`, error);
      }
    } else {
      console.warn(`Chart not found: ${chartIds[i]}`);
    }
  }

  pdf.save("forecast_report.pdf");
};

const getInsight = (id: string) => {
  switch (id) {
    case "chart-temperature":
      return "Temperature trends help detect overheating or cooling issues. Sudden spikes or drops can signal maintenance needs.";
    case "chart-vibration":
      return "Abnormal vibration patterns may indicate mechanical imbalance, wear and tear, or misalignment.";
    case "chart-pressure":
      return "Pressure anomalies may result from blockages or leaks. Monitor deviations closely.";
    case "chart-comparative":
      return "Comparative analysis gives cross-metric insights. Correlation between temperature, vibration, and pressure can highlight root causes.";
    case "chart-heatmap":
      return "Heatmap highlights anomalies. Red intensity shows frequency and severity. Frequent anomalies at certain hours should trigger inspection.";
    default:
      return "";
  }
};


export default generateForecastPDF;
// This function generates a PDF report of the forecast data.
// It captures the charts as images and adds them to the PDF.
// The insights for each chart are also included in the PDF.
// The PDF is then saved with the name "forecast_report.pdf".
// The function uses the jsPDF library to create the PDF and html2canvas to capture the charts as images.
// The getInsight function provides insights based on the chart ID.
